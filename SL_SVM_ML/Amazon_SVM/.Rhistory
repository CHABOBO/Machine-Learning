install.packages("car"); install.packages("QuantPsyc")
library(boot); library(car); library(QuantPsyc)
library(Rcmdr)
library("Rcmdr")
install.packages("Rcmdr")
install.packages("sentimentr")
install.packages("quanteda")
library(quanteda)
uk2010immigCorpus <- corpus(data_char_ukimmig2010,docvars = data.frame(party = names(data_char_ukimmig2010)),
metacorpus = list(notes = "Immigration-related sections of 2010 UK party manifestos"))
summary(uk2010immigCorpus)
setwd("C:/Users/febin/Desktop/SL_SVM_ML/Amazon_SVM")
getwd()
library(e1071)
train_data = read.csv(file="sentiment_train.csv",header = TRUE)
test_data = read.csv(file="sentiment_test.csv",header = TRUE)
sample_data = sample(1:nrow(train_data), 0.15*nrow(train_data))
training_data <- train_data[sample_data, ]
model <- svm(rating~negative_score+positive_score+neutral_score+compound_value,
data = training_data, kernel = "linear", type = "C-classification",
cross = 10, cost = 0.01, gamma = 100)
model$tot.accuracy
svm.pred_test <- predict(svm.model, test_data)
svm.pred_test <- predict(model, test_data)
pred_test <- predict(model, test_data)
mean(pred_test == test_data$rating)
mean(pred_test == test_data$rating)*100
model <- svm(rating~negative_score+positive_score+neutral_score+compound_value,
data = training_data, kernel = "linear", type = "C-classification",
cross = 10, cost = 0.01, gamma = 100)
model
mean(pred_test == test_data$rating)*100
pred_test <- predict(model, test_data)
mean(pred_test == test_data$rating)*100
model <- svm(rating~negative_score+positive_score+neutral_score+compound_value,
data = training_data, kernel = "linear", type = "nu-classification",
cross = 10, cost = 0.01, gamma = 100)
View(train_data)
model <- svm(rating~negative_score+positive_score+neutral_score+compound_value,
data = training_data, kernel = "linear", type = "c-classification",
cross = 10, cost = 0.01, gamma = 100)
model <- svm(rating~negative_score+positive_score+neutral_score+compound_value,
data = training_data, kernel = "linear", type = "C-classification",
cross = 10, cost = 0.01, gamma = 100)
plot(svm.model, train_data, negative_score ~ compound_value, main = "Amazon dataset classification")
plot(model, train_data, negative_score ~ compound_value, main = "Amazon dataset classification")
plot(model, train_data, negative_score ~ compound_value, main)
plot(model, train_data, negative_score ~ compound_value)
View(train_data)
qplot(negative_score, compound_value, colour = rating, data = test_data, shape = pred_test)
library
library(ggplot2)
qplot(negative_score, compound_value, colour = rating, data = test_data, shape = pred_test)
plot(model, train_data, positive_score ~ compound_value)
qplot(positive_score, compound_value, colour = rating, data = test_data, shape = pred_test)
